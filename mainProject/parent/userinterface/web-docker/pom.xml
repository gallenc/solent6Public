<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
   <parent>
        <groupId>solent.ac.uk.devops.traffic</groupId>
        <artifactId>userinterface</artifactId>
        <version>0.1-SNAPSHOT</version>
    </parent>
    
    <artifactId>userinterface-web-docker</artifactId>
    <packaging>pom</packaging>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                    <!-- copies and renames war -->
                    <!-- note that tomcat does not honour the war META-INF/Context.xml so the war name must match the path-->
                <executions>
                    <execution>
                        <id>copy-specific-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                           <artifactItems>
                              <artifactItem>
                                 <groupId>solent.ac.uk.devops.traffic</groupId>
                                 <artifactId>userinterface-web</artifactId>
                                 <version>${project.version}</version>
                                 <type>war</type>
                                 <overWrite>false</overWrite>
                                 <outputDirectory>${project.build.directory}/docker</outputDirectory>
                                 <!-- destFileName must match web path rquired -->
                                 <destFileName>project-web.war</destFileName>
                              </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <!-- unpacks war -->
<!--                    <execution>
                        <id>unpack-specific-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                           <artifactItems>
                              <artifactItem>
                                 <groupId>solent.ac.uk.devops.traffic</groupId>
                                 <artifactId>userinterface-web</artifactId>
                                 <version>${project.version}</version>
                                 <type>war</type>
                                 <overWrite>false</overWrite>
                                 <outputDirectory>project-web</outputDirectory>
                              </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
-->

                    <!-- copies any artifacts defined in dependencies -->
<!--                <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/docker</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <excludeTransitive>true</excludeTransitive>
                        </configuration>
                    </execution>
-->
                    <!-- unpacks war -->
<!--                    <execution>
                        <id>unpack-specific-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                           <artifactItems>
                              <artifactItem>
                                 <groupId>solent.ac.uk.devops.traffic</groupId>
                                 <artifactId>userinterface-web</artifactId>
                                 <version>${project.version}</version>
                                 <type>war</type>
                                 <overWrite>false</overWrite>
                                 <outputDirectory>project-web</outputDirectory>
                              </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
-->
                </executions>
            </plugin>
        
            <!-- you could also look at the maven docker plugin here -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>

                <executions>
                    <execution>
                        <id>Building Docker Image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>bash</executable>
                            <commandlineArgs>buildDockerImage.sh</commandlineArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    
    <dependencies>
        <!-- project one-jar dependencies -->
        <dependency>
            <groupId>solent.ac.uk.devops.traffic</groupId>
            <artifactId>userinterface-web</artifactId>
            <version>${project.version}</version>
            <type>war</type>
            <scope>compile</scope>
        </dependency>
    </dependencies>
 
</project>
